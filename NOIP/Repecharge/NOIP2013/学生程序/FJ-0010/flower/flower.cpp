#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<algorithm>
#include<string>
#include<string.h>
using namespace std;
int i,j,k,n,ex,h[100001];
bool dx,ok=true,pd=true;
int main()
{
    freopen("flower.in","r",stdin);
    freopen("flower.out","w",stdout);
    scanf("%d",&n);
    for(i=1;i<=n;i++)
      scanf("%d",&h[i]);
    for(i=2;i<=n;i++)
      if(h[i]!=h[i-1])
        pd=false;
    if(pd==true)
    {
      printf("0\n");
      fclose(stdin);
      fclose(stdout);
      return 0;
    }
    if(h[2]>h[1])
      dx=false;
    else
      if(h[2]<h[1])
        dx=true;
      else
        ok=false;
    for(i=3;i<=n;i++)
      if(h[i]>h[i-1]&&dx==true)
        dx=false;
      else
        if(h[i]<h[i-1]&&dx==false)
          dx=true;
        else
          ok=false;
    if(ok==true)
    {
      printf("%d\n",n);
      fclose(stdin);
      fclose(stdout);
      return 0;
    }
    else
    {
      for(i=1;i<=n;i++)
      {
        ok=true;
        if(i==1)
        {
          if(h[3]>h[2])
            dx=false;
          else
            if(h[3]<h[2])
              dx=true;
            else
              ok=false;
          for(j=4;j<=n;j++)
            if(h[j]>h[j-1]&&dx==true)
              dx=false;
            else
              if(h[j]<h[j-1]&&dx==false)
                dx=true;
              else
                ok=false;
        }
        if(i==2)
        {
          if(h[3]>h[1])
            dx=false;
          else
            if(h[3]<h[1])
              dx=true;
            else
              ok=false;
          for(j=4;j<=n;j++)
            if(h[j]>h[j-1]&&dx==true)
              dx=false;
            else
              if(h[j]<h[j-1]&&dx==false)
                dx=true;
              else
                ok=false;
        }
        if(i>=3)
        {
          if(h[2]>h[1])
            dx=false;
          else
            if(h[2]<h[1])
              dx=true;
            else
              ok=false;
          for(j=3;j<=n;j++)
          {
            if(j==i)
              break;
            if(j-1==i)
            {
              if(h[j]>h[j-2]&&dx==true)
                dx=false;
              else
                if(h[j]<h[j-2]&&dx==false)
                  dx=true;
                else
                  ok=false;
            }
            else
            {
              if(h[j]>h[j-1]&&dx==true)
                dx=false;
              else
                if(h[j]<h[j-1]&&dx==false)
                  dx=true;
                else
                  ok=false;
            }
          }
        }
      }
      if(ok==true)
      {
        printf("%d\n",n-1);
        fclose(stdin);
        fclose(stdout);
        return 0;
      }
      else
      {
        for(i=1;i<=n;i++)
          for(j=i+1;j<=n;j++)
          {
            ok=true;
            ex=1;
            if(ex==i)
            {
              if(ex+1==j)
              {
                ex=ex+2;
                if(h[ex+1]>h[ex])
                  dx=false;
                else
                  if(h[ex+1]<h[ex])
                    dx=true;
                  else
                    ok=false;
              }
              else
                if(ex+2==j)
                {
                  ex=ex+2;
                  if(h[ex+1]>h[ex-1])
                    dx=false;
                  else
                    if(h[ex+1]<h[ex-1])
                      dx=true;
                    else
                      ok=false;
                }
                else
                {
                  ex=ex+1;
                  if(h[ex+1]>h[ex])
                    dx=false;
                  else
                    if(h[ex+1]<h[ex])
                      dx=true;
                    else
                      ok=false;
                }
            }
            else
            {
              if(ex+1==i)
              {
                if(ex+2==j)
                {
                  ex=ex+2;
                  if(h[ex+1]>h[ex-2])
                    dx=false;
                  else
                    if(h[ex+1]<h[ex-2])
                      dx=true;
                    else
                      ok=false;
                }
                else
                {
                  ex=ex+1;
                  if(h[ex+1]>h[ex-1])
                    dx=false;
                  else
                    if(h[ex+1]<h[ex-1])
                      dx=true;
                    else
                      ok=false;
                }
              }
              else
              {
                if(h[2]>h[1])
                  dx=false;
                else
                  if(h[2]<h[1])
                    dx=true;
                  else
                    ok=false;
              }
            }
            for(k=ex+2;k<=n;k++)
            {
              if(k==i||k==j)
                break;
              if(k-1==j&&k-2==i)
              {
                if(h[k]>h[k-3]&&dx==true)
                  dx=false;
                else
                  if(h[k]<h[k-3]&&dx==false)
                    dx=true;
                  else
                    ok=false;
              }
              else
              {
                if(k-1==i||k-1==j)
                {
                  if(h[k]>h[k-2]&&dx==true)
                    dx=false;
                  else
                    if(h[k]<h[k-2]&&dx==false)
                      dx=true;
                    else
                      ok=false;
                }
                else
                {
                  if(h[k]>h[k-1]&&dx==true)
                    dx=false;
                  else
                    if(h[k]<h[k-1]&&dx==false)
                      dx=true;
                    else
                      ok=false;
                }
              }
            }
            if(ok==true)
            {
              printf("%d\n",n-2);
              fclose(stdin);
              fclose(stdout);
              return 0;
            }
          }
      }
    }
    printf("%d\n",((n-1)*9997)%n);
    fclose(stdin);
    fclose(stdout);
    return 0;
}
